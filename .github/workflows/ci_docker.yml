name: Tests

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

jobs:
  test:
    name: Ubuntu CI
    runs-on: ubuntu-latest
    container: keenon/diffdart:test_base
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Build
        run: mkdir build &&
          cd build &&
          cmake .. -DCMAKE_BUILD_TYPE=Release &&
          make tests -j2
      - name: Run tests
        run: cd build &&
          ctest -T Test
        timeout-minutes: 15

  build-mac:
    name: Mac OSX Python ${{ matrix.python-version }}
    runs-on: macos-12
    strategy:
      matrix:
        python-version: [ "3.7", "3.8", "3.9", "3.10" ]
        include:
          - python-version: 3.7
            PYTHON_VERSION_CODE: cp37-cp37m
            MAC_VERSION_TAG: macosx_12
          - python-version: 3.8
            PYTHON_VERSION_CODE: cp38-cp38
            MAC_VERSION_TAG: macosx_12
          - python-version: 3.9
            PYTHON_VERSION_CODE: cp39-cp39
            MAC_VERSION_TAG: macosx_12
          - python-version: 3.10
            PYTHON_VERSION_CODE: cp310-cp310
            MAC_VERSION_TAG: macosx_12
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Select Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: "x64" # optional x64 or x86. Defaults to x64 if not specified
      - name: Set variables
        run: |
          VER=$(cat ./VERSION.txt)
          echo "VERSION=$VER"
          echo "VERSION=$VER" >> $GITHUB_ENV
      - name: Test environment
        run: |
          echo "VERSION=${{ env.VERSION }}"
          echo "PYTHON_VERSION_CODE=${{ matrix.PYTHON_VERSION_CODE }}"
      - name: Install pytest, wheel, auditwheel, pybind11-stubgen, numpy and torch
        run: python -m pip install pytest wheel auditwheel numpy torch
      - name: Install dependencies
        run: ci/mac/install_dependencies.sh
